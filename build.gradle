/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'XueLiang' at '16-10-18 上午9:40' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    jcenter()
}

gretty {
  port = 8081
  servletContainer = 'jetty9'
  // ... many more properties
}

// In this section you declare the dependencies for your production and test code
dependencies {
  def springVersion = '4.3.2.RELEASE'
  def log4jVersion = '2.7'
  
  compile "org.springframework:spring-webmvc:$springVersion"
  compile "org.springframework:spring-websocket:$springVersion"
  
  compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
  compile "org.apache.logging.log4j:log4j-core:$log4jVersion"

  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.
  testCompile 'junit:junit:4.12'
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.akhikhl.gretty:gretty:1.4.0"
  }
}

tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"
}

// 发布到jetty
task deploy() {
  copy {
    from ('build/libs') {
      include('*.war')
    }
    into('D:\\ProgramFiles\\jetty\\webapps')
  }
}
